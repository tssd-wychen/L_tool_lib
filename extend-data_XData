(vl-load-com);;;=============================================;;;      通用函数   扩展数据的添加              ;;;参数：en       ----  对象图元名              ;;;      app_name ----扩展应用名                ;;;      v1       ----值                        ;;;      STR      ----操作标识。含义如下：;;;                       "DelOnly"删除指定应用名的扩展数据，不添加;;;                       "DelAll" 删除所有应用名的扩展数据，不添加;;;                       "Add"    不覆盖现有扩展数据，添加新的数据;;;                       "Del"    删除指定应用名下的扩展数据，添加新的数据;;;                       "All"    删除所有应用名下的扩展数据，添加新的数据;;;日期：zml84 修改于 2013-07-18 (defun TTEDIT (EN APP_NAME V1 STR / ENL TMP TMP1 TMP2)    ;;转换为大写    (setq STR (strcase STR))    ;;    (cond ;;1.删除指定应用名的扩展数据 ((= STR "DELONLY")  (setq ENL (entget EN (list APP_NAME)))  (if (assoc -3 ENL)      (entmod (subst (list -3 (list APP_NAME)) (assoc -3 ENL) ENL)      )  ) ) ;;2.删除原来所有的扩展数据 ((or (= STR "DELALL")            (= STR "ALLDEL")  )  (setq ENL (entget EN (list "*")))  (setq TMP (cdr (assoc -3 ENL)))  ;;逐个删除  (foreach N TMP      (TTEDIT EN (car N) NIL "DELONLY")  ) ) ;;3.不操作任何扩展数据（如果注册的是已有的也不覆盖） ((or (= STR "ADD")      (= STR "")  )  (setq ENL (entget EN (list APP_NAME)))  (setq TMP (cdr (assoc -3 ENL)))  (setq TMP1 (cdr (assoc APP_NAME TMP)))  (if TMP1      (setq TMP2 (append TMP1 (list V1))     ENL (subst (list -3 (cons APP_NAME TMP2)) (assoc -3 ENL) ENL)      )      (setq ENL (append ENL (list (list -3 (list APP_NAME V1)))))  )  ;;更新  (regapp APP_NAME)  (entmod ENL) ) ;;4.删除当前，添加新的数据 ((= STR "DEL")  ;;删除原来所有的扩展数据  (TTEDIT EN APP_NAME NIL "DELONLY")  ;;添加新的数据  (TTEDIT EN APP_NAME V1 "ADD") ) ;;5.删除原来所有的扩展数据，添加新的数据 ((= STR "ALL")  ;;删除原来所有的扩展数据  (TTEDIT EN NIL NIL "DELALL")  ;;添加新的数据  (TTEDIT EN APP_NAME V1 "ADD") )
    ) ;_结束COND);;;================================================;;;测试;|(defun C:TT ()    (if (setq SS (entsel "\n点取对象:")) (progn (TTEDIT (car SS) "QQ" (cons 1000 "ZML84") "ALL")        (TTEDIT (car SS) "QQ" (cons 1000 "389280742") "ADD") )    )    (princ))|;
;;;================================================(princ)


(defun regapp-new (appname)  (if (tblsearch "appid" appname)	; Checks if already registered.    T    (if	(= (regapp appname) nil)	; Some other problem.      nil      T    )  ))(defun get-xdata		(ent appname / ent-data ex-data);;;  (get-xdata (car (entsel)) "appname")  (setq ent-data (entget ent '("*")))  (if (and (setq ex-data (assoc -3 ent-data))	  (setq ex-data (assoc appname (cdr ex-data)))      )    (cdr (assoc 1000 (cdr ex-data)))  ))(defun overwrite-xdata (ent	    appname	value	    /			ent-data    ex-data	ex-data-old ex-data-new		      );;;  (overwrite-xdata (car (entsel)) "appname" "需要记录的内容")  (setq ent-data (entget ent '("*")))  (setq ex-data (assoc -3 ent-data))  (setq ex-data-old (assoc appname (cdr ex-data)))  (if ex-data-old    (progn (setq ex-data-new		 (subst (cons 1000 value)			(assoc 1000 (cdr ex-data-old))			ex-data-old		 )	  )	  (setq ex-data (subst	ex-data-new				ex-data-old				ex-data			)	  )    )    (if	(regapp-new appname)      (progn (setq ex-data-new		   (cons appname			 (list (cons 1000 value))		   )	    )	    (setq ex-data (append (if ex-data				    ex-data				    '(-3)				  )				  (list ex-data-new)			  )	    )      )    )  )  (entmod (append (entget ent) (list ex-data))))
